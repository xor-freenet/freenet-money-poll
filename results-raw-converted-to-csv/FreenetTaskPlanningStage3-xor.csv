Task category / Task,Value,% of total,Comment
Remaining,0.149999999999977,0.0149999999999977%,
,,,
Instructions,,,
"The goal of this stage of the funding allocation procedure is to estimate ""value"" of individual tasks.
Value shall measure how useful each task would be to our users, to developers, to health of the project, etc.
Every participant gets 1000 units of value to allocate between the tasks, starting from an equal distribution of units.
So the only thing you should edit is to allocate those 1000 units in the ""Value"" column of each task. Everything else will be computed automatically.
LibreOffice / OpenOffice can highlight the cells you should fill in: Go to ""View"" and select ""Value highlighting"" (CTRL+F8).

The tasks are grouped into different areas such as ""Speed"" and ""User experience"" to ensure we think about all areas.
Some tasks might be helpful to not only one but multiple areas. Nevertheless, they are only enlisted in one area.
Thus you do not need to feel obliged to cast votes in every area, you might as well instead vote for the tasks which cover more than just the area they are enlisted at. When deciding about the value of a task, you might want to consider how many areas you think it covers.

A few important things here to ensure we get the true benefit of ""wisdom of the crowd"":
- Don't be strategic (e.g. don't over-allocate to one area because you assume others might under-allocate to it).
- Don't collude.
- Don't consider development cost in your value allocation, this will be done in the next stage.
- If you aren't sure, leave stuff at an even allocation, don't assign 0 value.

Once everyone has allocated, we will take the average for each task to be our group estimate for that task.",,,
,,,
Speed - Improve performance of Freenet or Freenet applications,,,
Web of Trust: Finish first iteration of most critical speed fixes (1 bugtracker entry). Was subject of previous 2 years of paid work. Ensures this work is not left unfinished. Needed for Sone / Freetalk / filesharing / … (see all other sections except Technical Debt),200,20.0030004500675%,"Freenet's main default feature is 1990s style Freesites. That's not enough nowadays. Our uservoice poll shows that users want dynamic apps (e.g. filesharing, social networking, blogging, forums, mail). WoT is the required foundation for all of those. Its speed is not yet good enough to enable it by default. We need to fix that before we can have more apps."
Freetalk: Make Freetalk usable again by using the new WoT event-notifications API to fix its most severe performance issues. The API had been implemented as previous paid work to specifically allow repairing Freetalk. Thus we'd reap what we sowed there.,100,10.0015002250338%,"Our #1 request on uservoice is filesharing, and Freetalk will be the best foundation for it (see “Filesharing” at “New core features” section for an explanation). So I'm voting for finishing Freetalk soon."
"WoT: Second iteration of less critical performance fixes: Reduce transaction size from O(512) to O(1): Split up ""import trustlist"" transaction into 1 transaction for each trust.",100,10.0015002250338%,Same as above – we need to be able to add features beyond 1990s style websites to Freenet.
"WoT: Second iteration of less critical performance fixes: Identity garbage collection: Stats show that less than 1000 of the 14000 WoT identities are still active (thanks to ArneBab). Thus, we need to GC abandoned identities.",100,10.0015002250338%,Same as above – we need to be able to add features beyond 1990s style websites to Freenet.
WoT: Second iteration of less critical performance fixes: Process results of peer review of xor’s  Web of Trust bachelor’s thesis (which was about last year’s performance improvements).,100,10.0015002250338%,Same as above – we need to be able to add features beyond 1990s style websites to Freenet.
"Fred: does it provide sufficient benefits to re-add native acceleration for FEC, or crypto? Especially JVMs without gmp acceleration - Oracle on Windows.",0,0%,The project has way too much maintenance overhead for its number of contributors. So we should use standard libraries instead of custom ones wherever possible. Thus I support actually removing more custom stuff instead of adding more. This especially applies to high maintenance things such as native code which needs to be compiled for each platform.
,,,
User Experience - make things easier and more enjoyable to use,,,
"Single use node references with authentication token: Currently, two users need to add the node reference of each other to create a connection. With this, only one of the two would have to add the other. Might benefit from FOAF (see 3 tasks below) for connectivity if Opennet is off.",5,0.500075011251688%,"IMHO the big problem currently is not adding single peers, it is just discovering plenty of peers since Freenet users are very scarce. So while I do think this is important, I'll vote for doing FOAF first."
Darknet invitation bundles: Feature for adding a single use node reference to an installer executable. People could hand out the installer executable to their friends to allow them to connect by Darknet instantly.,0,0%,In my experience most people nowadays are not used to obtaining binaries from their friends anymore. They usually download them from the official websites instead. So I don't think this is worth the hassle it would be to figure out how to keep the EXE signatures valid for example.
"Short node references: Currently, references fill almost half a sheet of paper. Improve this by uploading node references to Freenet itself as a random KSK, with for example 128 bit entropy to be ~ 25 letters. (Requires having peers already, but without the UI could just show the long one)",5,0.500075011251688%,"IMHO the big problem currently is not adding single peers, it is just discovering plenty of peers since Freenet users are very scarce. So while I do think this is important, I'll vote for doing FOAF first."
"Friend-of-a-friend connection suggestions (""FOAF""): Like the Facebook friend finder, Freenet could be improved to tell you about Darknet peers of your peers. You could then chose to add them as your peers. Part of the code exists.",15,1.50022503375506%,
"Friend requests, like in Facebook: With primitive FOAF, both peers would still have to add each other. With friend requests, peers of your peers could just request to connect to you. Could use similar UI to Facebook friend requests.",15,1.50022503375506%,
Something like Icicle to ease setting up Darknet connections - perhaps add support for connecting nodes over text message or Signal?,0,0%,I'm against doing any Android work before we have a killer feature such as filesharing. Otherwise we'd just get bad ratings in the Play Store and be stuck with them.
"Darknet chat improvements: Freenet allows sending messages to Darknet peers. The UI for that is very primitive. It could be improved, for example to be similar to Facebook chat. Needs fixes for high message loss probability. ",5,0.500075011251688%,"We first need the above improvements to make adding peers more easy. Also, I would doubt the main usecase of Freenet being to communicate with friends. I think the tools for communicating with strangers are more important (Freetalk, Sone, etc.)"
Maybe FLIRCP can add darknet N2NTMs as a backend?,0,0%,I don't think many average computer users will be interested in using an IRC client as frontend for N2NTMs. They're probably much more interested in the above suggestion of having N2NTMs look like the Facebook chat.
FlogHelper (WoT-based blogging app): Accumulate flogs of other users. List them nicely. Add a search function. Use that to replace or amend the current concept of FProxy's default bookmarks as entry point for Freenet. Hundreds of blogs instead of ~10 bookmarks.,5,0.500075011251688%,"I would definitely like to do that someday, but I think we need Freetalk / Sone first."
"Better feedback on progress: currently in FProxy progress is displayed in terms of completed blocks. Information on how many fetch / insert requests are running for each one, and the progress on them, could help make the default mode of operation seem like hanging.",0,0%,"Fproxy is too complex to understand already. It needs to get less complex, not more."
Make robust search functionality part of the default installation [task is possibly not specific enough: Complexity depends a lot on search target: Freesites? FlogHelper flogs? Freetalk messages? WoT identities? Sones? Filesharing?],0,0%,"I think generic Freesite search is not technically possible due to Freesites not having any anti-spam mechanism such as WoT. So I'd prefer doing search in each WoT-based application individually. All of those apps need their basic features to be finished first though, so I'll instead vote at “New core features”  for finishing the apps which I think are most useful."
Add ability to comment on Freesites (fulfilled by babcom (is opt-in) / Freetalk / Sone?),0,0%,"None of the apps which could be the foundation for this are ready yet, so this is not interesting yet. I'll instead vote for finishing those at “New core features”. Also WoT needs to be finished as well first, so I'll also vote for WoT at “Speed”."
"Frost-alike communication system supporting easy usability, encrypted and read-only boards and hidden instant messaging between 2 or more ID's, integrated file transfer agent, mixed bulletproof ID'd and unsigned messaging. [= e.g. Freetalk. Likely requires the WoT speed tasks.]",0,0%,"I think this task is a bogus entry which was added by someone who didn't know that Freetalk aims to provide this and has a large codebase already (WoT-based, web interface, NNTP). So I'll vote for finishing Freetalk specifically at “Speed” and “New core features”. Filesharing can also be done with Freetalk, so I'm voting for that at “New core features” as well."
Improve the vulnerability and functionality of Flip [One anonymous user commented that you may as well re-invent FLIP],0,0%,"Doing IRC over Freenet is very complex due to the problem that we want global visibility of a channel's content but also being spam-proof and having good latency.  FLIP likely ignores these problems, IIRC it just uses a KSK-queue. I think high latency chat like forums is much easier to achieve and has more existing code, so I'll vote for finishing Freetalk at “New core features”."
Improve FProxy CSS3 support to allow better Freesite UI,0,0%,"We've spent over 10 years of paid development on boring core fred features such as static Freesites, that's enough for now. I'd rather get dynamic apps finished such as Sone, Freetalk, Filesharing, etc. So I'll instead vote for those at “Speed” and “New core features”."
Document the content filter,0,0%,"Too unspecific task suggestion. It supports many file formats, which one would we document? Also, this doesn't provide any immediate benefit to the user: The only thing important for the user to know about content filtering is that it removes private data such as JPEG geotags. There's not enough doc needed for that to justify having this as a poll entry."
Improve Shoeshop/blob handling [how?],0,0%,"Too unspecific task suggestion. And sneakernet is a very rare usecase, it doesn't benefit enough users IMHO."
p2p file exchange by time-set expiring keys [Imprecise task? Also violates main goal of Freenet of preventing censorship!?],0,0%,I think the most easy way to get filesharing is by using Freetalk as a backend. We don't need any new key types for that. So I'll vote for Freetalk / Filesharing at “Speed” and “New core features” instead.
"Freenet key links directed to a dedicated Freenet browser, opennet [= non-Freenet Internet?] links to the system default like in the AutoHotKey script ""Freenet Browser Director”",0,0%,Too much hassle to get this right on every platform / browser combination for the few Freenet links which people will likely encounter on the regular Internet. We can do such high maintenance cost fancy stuff once we have much more developers available. Right now it would only push our maintenance load which is too high anyway.
"Warn users not to use Chrome, but instead an open source/free software browser",0,0%,Less than a day of work so not eligible for discussing this in this poll IMHO.
"FLIP or FLIRCP could use work to become official plugins, maybe with a webclient instead of having to install a potentially privacy leaking 3rd party one. [Likely requires the WoT performance work in the “Speed” section.]",0,0%,"Doing IRC over Freenet is very complex due to the problem that we want global visibility of a channel's content but also being spam-proof and having good latency.  FLIP likely ignores these problems, IIRC it just uses a KSK-queue. I think high latency chat like forums is much easier to achieve, so I'll vote for finishing Freetalk at “Speed” and “New core features”."
,,0%,
Security - Make Freenet more secure against attacks,,0%,
"Fix plugin data leak: None of our official plugins deletes its database when the user uninstalls it. They also do not obey the ""PANIC"" button of Freenet which should delete all client data.",5,0.500075011251688%,"Not very important yet: If an attacker gets a copy of your hard disk, you're likely screwed anyway thanks to standard file systems not zeroing file contents after deletion."
"Fix lack of plugin data encryption: WoT, Freetalk, and potentially other plugins do not encrypt their databases when the user has configured Freenet to encrypt user data. Should be changed to obtain an encryption key from Freenet to encrypt their stuff.",10,1.00015002250338%,
Add simple tunnels. The easiest approach here may be to have some automatically added temporary time limited or data throughput limited FOAF connections that form simple tunnels. Tunnels should have a probability to use for high HTL inserts and requests based on security settings for the node.,0,0%,"I've instead voted for the the Darknet enhancements in the “User Experience” section as they are major giant security improvement as well but much less work: Opennet is generally believed to be impossible to make even only basically secure. Thus we should encourage Darknet use. Those tasks are mostly UI, not changes to the core, so they'll be a lot easier for someone else than Matthew (he is not for hire currently).
Further The WoT work in the ""Speed"" section is also critical for security: Many people use FMS as the WoT-based Java forums are not usable while WoT is slow. FMS is a not fully reviewed C++ app developed anonymously - a big security risk. And Frost allows censorship by DoS."
,,,
Technical debt - Stuff that will make future development faster,,,
fred: Documentation is said to be poor. Improve it. Would help people other than Matthew to understand the code. Good to do this now while Matthew is still available as a volunteer and we can thus maybe ask him questions.,0,0%,See 3 lines below
fred unit test coverage is 20%. Improve it. Would help people other than Matthew to understand the code. Good to do this now while Matthew is still available as a volunteer and we can thus maybe ask him questions.,0,0%,See 2 lines below
"WoT unit test coverage is 45%. Given the lower total line count, it would be possible to complete it to 100%. That would be a preparation of the major “refactoring” of replacing db4o with a different database. May become necessary: db4o’s vendor has abandoned it.",0,0%,See line below
Alternate task instead of the above tests/doc: Permanently use 1 day per workweek (= 20% of total time) to deal with any kind of technical debt whatsoever. Allow the developer to chose freely which issues to deal with so even unimportant technical debt will be dealt with eventually.,100,10.0015002250338%,"Matthew is not available for hire with the current level of funds. Any new fred developer will need lots of education about the codebase before he can do any changes to the complex core network subsystem. The best approach to acquiring that will be writing lots of documentation and tests, so we should allocate some time for that.
Further Freenet has a very very high technical debt. So while I think we should improve upon it, I don't think it makes sense to stick on any specific task of technical debt as there is just too much to pick the right one. I'd rather just have a day per week for general technical debt work."
"Alternate task instead of the above technical debt day: 1 day/week as “do whatever you want to”-day like Google does. Example activities: Generic education (new Java language features, programming patterns, algorithms, papers); Wiki; Drafting new apps; Tests; Doc; Mailing lists",0,0%,"I do think we should end up with a full “do whatever you want day” eventually; but I acknowledge that I as the previous employee haven't proved myself to be trustworthy enough for this yet. So given that I would like to be chosen to continue being the Freenet employee, I'll instead vote for the compromise of a technical debt day which is right above."
Fred: Migrate to the Gradle build tool - Gradle can provide dependency fetching and verification support and then defer to the existing ant build. (Or we can move the project to fit standard directory structure and then the Gradle build becomes a lot easier to write.),0,0%,"Nextgens has started dealing with this already. As he is one of our most reliable volunteers, I'd say we just wait until he finishes it, I'm confident he will. So no need to invest any money in this, let's give his code a chance."
,,0%,
"Outreach - Stuff that will help attract users, developers, and donors to Freenet",,0%,
Language: Lower threshold of entry by working on how to install Freenet,0,0%,Less than a week of work so not eligible for discussing this in this poll IMHO.
Language: Add these strings for install to translation resource. Bonus for looking at this. ,5,0.500075011251688%,
Language: Simplify website language. Boil this into this for all pages.,0,0%,"The website has received enough work from volunteers recently, no need to spend any money on it. Our main problem is that Freenet's default feature still is boring 1990s Freesites, there is no need to do more advertising before we actually have a good product behind it. So I'm voting for the dynamic apps at “Speed” and “New core features” instead."
"Language: Fix current low-hanging problems with UI language, as per issues on transifex.",0,0%,There are too many issues on Transifex. We should rather ask Transifex to add an “English (editable)” language so people can suggest edits to the English source l10n right away instead of filing issues. This would allow us to batch-download their improvements and apply them to the code directly instead of having to manually edit the source l10n on our own.
Language: Add Transifex issues to main bugtracker,0,0%,"Too much work: 1) People have been creating very many of those issues, there might be much spam.  2) It's likely the same amount of work to resolve them right away. 3) See the comment on the task right above"
"Language: Establish overview of, and do away with needlessly difficult words",0,0%,"Too unspecific task suggestion: Our l10n is HUGE, there are MANY words. Also I think even if we did create such a document it's unlikely that people will look at it every time they add a new l10n string or translate one."
"Language: Document how Freenet works, with a infographic, on the Wiki, detailing the remainder of speciality words.",0,0%,"We do have lots of documentation how Freenet works. Also “how Freenet works” is not specific enough, Freenet has LOTS of components."
Website redesign,0,0%,"We have just recently redesigned it. Throwing that away too soon would disappoint the volunteer authors. And the main argument for re-designing seems to be dislike of having a bright-on-dark color scheme – but there's a study which shows that bright-on-dark is actually among the most readable schemes. And: We are a darknet, we need a dark site."
Website redesign: Migration to static Github Pages,0,0%,"More vendor lock-in would not help a project which already doesn't have enough contributors to conduct migrations from it's currently problematic vendor lock-ins such as db4o having been abandoned by the company behind it (WoT/FT still use it. It doesn't create much problems currently, but still it would be nice to remove it preemptively, which we can't)."
Website redesign: New CSS redesign,0,0%,Same as two lines above.
"Website redesign: Migration of more detailed documentation to Github Wiki, allowing website to focus on onboarding new users [Notice: we have 3 non-Github Wikis currently, 2 of those have already been waiting for migration into the main one for years.]",0,0%,"We've failed to finish migrating our 2 old wikis to our 3rd new one for years – which clearly shows that we  don't need to try migrating to yet another 4th one again. And: We use the same software as Wikipedia for our current Wiki, and Wikipedia is the standard for Wikis. We should stick to standard software for less maintenance and better usability."
"‘How to’ YouTube video series: A couple of (maximal)-5-minute videos, each explaining one important practical aspect of using Freenet. Do this because currently we demand users to read far too much (FAQ, wiki, etc.). Example of ZeroNet.",0,0%,Hiring actors / voice actors / video editors / etc. sounds like a black hole to suck up our money :|  And I don't think we need more advertising before we actually have features which are more interesting than1990s style static Freesites.. So I'll instead vote for Freetalk / Filesharing / Sone etc. at the “Speed” and “New core features” sections.
Update FSNG: Show web interface usage rather than Thunderbird to match modern user expectations,0,0%,Our goal should IMHO actually be to improve usability to the point where FSNG is not needed anymore. We should instead polish Freetalk / Freemail / Sone / WoT / etc. to the point where we can just bundle them with the default installation. So I'll instead vote for that at the “Speed” and “New core features” sections.
Update FSNG: Use a modern Windows installation with the default theme for screenshots,0,0%,Same as right above.
"Legal docs: Have resources akin to the Tor legal FAQ for exit node operators, created by a legal expert on the official project page, that can be shown to LEA or users. Explain what it is used for, how to use it safely, best practices, plausible deniability, legal status, etc.",0,0%,"Plain common sense already shows that Freenet is legal in any non-fascist country: Same as mailboxes for regular letters cause postal services to store and transport things from anonymous people, Freenet stores and transports data anonymously. Postal services are legal, so is Freenet. Also, node operators cannot look into the encrypted content they transport, so they are not liable for it just like the postal service doesn't know whats inside letters and packages. No need to throw money at lawyers for this, our FAQ mentions these and more common sense conclusions already."
"Legal docs: Sample response letters for the potential arrests or raids, especially for the recent events as some users were completely innocent. We need to educate LEA, more than ever, that it in itself is not a crime nor suspicious to run Freenet. ",0,0%,Legal cases with Freenet being involved only seem to happen once every few years. That's not enough to justify spending money on this.
"Legal docs: Instead of the above suggestions, just link the Tor legal FAQ. Tor is pretty similar and thus we shouldn't need to create our own one. Notice especially that there are 200 countries in the world and 200 lawyers would be pretty expensive.",0,0%,I think having our existing common sense explanations is enough (see 2 lines above).
"Fundraising: While volunteers did help with fundraising, they don't seem to enjoy it very much – we've contacted much fewer entities than those listed in the Wiki. So also have Freenet's employee do it. Important as Matthew will require much higher level of funding to come back.",29.85,2.98544781717258%,"I did fundraising after money ran out as a volunteer, and I can definitely say that it's annoying enough to be eligible to want money for doing it :)   My personal TODO list probably contains over a hundred of ideas who to ask for donations, so there is lots of opportunity to be harvested."
,,,
New core features - Enable using Freenet for new kinds of tasks/usecases,,,
"Filesharing (#1 request on uservoice with 700 votes, not yet implemented but could easily be built upon Freetalk)",100,10.0015002250338%,"The feature which users want the most, so we should give it to them. Can very easily be built upon Freetalk: Filesharing needs 1 file to be visible to all N users. Forums are generic 1-to-N publishing. A thread is an announcement of a file. The file is an attachment of the thread message, which also maps perfectly to NNTP (secondary Freetalk user interface). And a reply can be a rating of the file. (Replies also can serve to propagate files in a gossip-style protocol among social circles of users. This ensures that not every one of the N users has to download the messages of all N-1 others.) Subforums such as “en.books.science.fiction” are the primary input for providing a good search function, which is what is most needed for filesharing. So overall, the only non-natural Freetalk features we would need to add for filesharing would be: 1) Attachments 2) Auto-upload of a directory and posting as threads 3) A search function"
Keepalive: This is very popular on uservoice. It could be improved significantly with some integration into the web interface and minor backend changes.,0,0%,I don't think we need this before we have filesharing.
"Social networking (Sone, not enabled by default due to WoT performance issues and issues of its own)",0,0%,"This is a tough decision! Sone and Freetalk are in fact my most favorite candidates for what to finish after WoT. I do accept that many users would prefer Sone as it currently does work compared to Freetalk which does not. So if people vote for having me finish it before Freetalk, I am willing to do so of course. However, the #1 request in our uservoice poll is filesharing – and Sone cannot be a foundation for filesharing, but Freetalk can. And Sone would probably be a lot more work to finish because it has severe problems in its architecture: It does not use a database yet, it re-downloads everything from the network at every restart. This is a huge performance issue, and much more work to fix than Freetalk. So I won't vote for Sone now – but I would certainly support doing it right after Freetalk + Filesharing :)"
"Blogging (FlogHelper, not enabled by default due to WoT performance issues)",0,0%,"While the UI of FlogHelper could use some improvements, it at least does work just fine. We merely don't enable it by default because it needs WoT and WoT is too slow currently to be enabled by default. So I don't think any work is needed upon it yet – before we deal with the less critical UI improvements we should invest our time into Sone and Freetalk."
"Forums (Freetalk, not enabled by default due to WoT performance issues and issues of its own: Freetalk itself needs its performance fixes in the “Speed” section. Also it needs general usability / security / bugfixing / polishing work which this entry shall be about.)",100,10.0015002250338%,"Our #1 request on uservoice is filesharing, and Freetalk will be the best foundation for it. So I'm voting for finishing Freetalk soon."
"Mail (Freemail, not enabled by default due to WoT performance issue)",0,0%,"IMHO Freemail will only become interesting once we have social networks and forums as places for people to actually find friends to which they want to talk in private. So I wouldn't invest any work into it now, I'd rather finish Freetalk / Sone first."
"Distributed version control (various tools for Git / Mercurial over Freenet, not finished yet and lack code review)",0,0%,We should first deal with providing users with good post-1990 applications before we move on to writing tools which are only interesting to developers.
"Transport plugins are a very popular feature request. There is code but it needs a lot of work, and it may be better to start from scratch. In any case it will involve breaking up a lot of monster classes (good for code quality), and a lot of knock-on effects on concurrency (less good!).",0,0%,"We've spent over 10 years of paid development on the fred core, that's enough for now. I'd rather have us actually aim towards giving new features to the users = finish the dynamic apps such as Sone, Freetalk, Filesharing, etc. So I'll instead vote for those."
"Make dynamic web pages possible [likely bogus suggestion: We must not allow full JavaScript for the security issue of preventing tracking / de-anonymization. We usually use plugins instead such as Sone, FlogHelper, Freetalk, Freemail, etc. So you might vote for those above instead]",0,0%,"I think this is truly bogus as it sounds like it requests JavaScript – the proper way to do dynamic content in Freenet is with plugins instead. JavaScript is probably impossible to filter enough to be secure for Freesite inclusion. And even if it is possible: Our limited financial resources don't allow us to deal with the complexity of what modern browsers can do. We need a small controlled environment, and that is plugins."
Add FCP calls to Freemail to setup a user and to change user passwords,0,0%,Less than a day of work so not eligible for discussing this in this poll IMHO.
"Do not reject Freemail messages when an ID is not known, queue them for a period and attempt to find the identity",0,0%,Less than a week of work so not eligible for discussing this in this poll IMHO.
New keytype: PSK (programmable subkeys - shared ownership),0,0%,"All the existing SSK-based dynamic apps like Freetalk / Sone are half-finished already, and there's no indication yet that it is not possible to finish them with just SSKs. Re-designing them to use PSKs instead would throw away years of work, cause multiple years of new work, and is just not indicated since it seems SSKs will work just fine."
New keytype: RSK (revocable),0,0%,"I don't think we need RSKs: Most SSK usage will typically be by WoT-based applications, and WoT users can just distrust identities with a comment like “Seems to be revoked / compromised / whatever” instead of needing true revocation of SSKs. It would also be possible to add a “revoked” flag to WoT identities (and preventing further “reactivation” inserts without the flag by inserting the highest allowed USK edition together with the flag)."
